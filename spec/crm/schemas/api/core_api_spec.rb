=begin
#Schemas

#The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object's type, properties, and associations. The schema can be uniquely identified by its **object type ID**.

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Crm::Schemas::CoreApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CoreApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Crm::Schemas::CoreApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CoreApi' do
    it 'should create an instance of CoreApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Crm::Schemas::CoreApi)
    end
  end

  # unit tests for archive
  # Delete a schema
  # Deletes a schema. Any existing records of this schema must be deleted **first**. Otherwise this call will fail.
  # @param object_type Fully qualified name or object type ID for the target schema.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for archive_association
  # Remove an association
  # Removes an existing association from a schema.
  # @param object_type Fully qualified name or object type ID for the target schema.
  # @param association_identifier Unique ID of the association to remove.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive_association test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Create a new schema
  # Define a new object schema, along with custom properties and associations. The entire object schema, including its object type ID, properties, and associations will be returned in the response.
  # @param object_schema_egg Object schema definition, including properties and associations.
  # @param [Hash] opts the optional parameters
  # @return [ObjectSchema]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_association
  # Create an association
  # Defines a new association between the primary schema&#39;s object type and other object types.
  # @param object_type Fully qualified name or object type ID for the primary schema to associate.
  # @param association_definition_egg Attributes that define the association.
  # @param [Hash] opts the optional parameters
  # @return [AssociationDefinition]
  describe 'create_association test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all
  # Get all schemas
  # Returns all object schemas that have been defined for the target account.
  # @param [Hash] opts the optional parameters
  # @return [CollectionResponseObjectSchema]
  describe 'get_all test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_by_id
  # Get an existing schema
  # Returns an existing object schema.
  # @param object_type Fully qualified name or object type ID of the target schema.
  # @param [Hash] opts the optional parameters
  # @return [ObjectSchema]
  describe 'get_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a schema
  # Update the details for an existing object schema.
  # @param object_type Fully qualified name or object type ID for the target schema.
  # @param object_type_definition_patch Attributes to update in the target schema.
  # @param [Hash] opts the optional parameters
  # @return [ObjectTypeDefinition]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
