=begin
#CRM cards

#Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Crm::Extensions::Cards::CardsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CardsApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Crm::Extensions::Cards::CardsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CardsApi' do
    it 'should create an instance of CardsApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Crm::Extensions::Cards::CardsApi)
    end
  end

  # unit tests for archive
  # Delete a card
  # Permanently deletes a card definition with the given ID. Once deleted, data fetch requests for this card will no longer be sent to your service. This can&#39;t be undone.
  # @param app_id The ID of the target app.
  # @param card_id The ID of the card to delete.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Create a new card
  # Defines a new card that will become active on an account when this app is installed.
  # @param app_id The ID of the target app.
  # @param [Hash] opts the optional parameters
  # @option opts [CardCreateRequest] :card_create_request The new card definition.
  # @return [CardResponse]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all
  # Get all cards
  # Returns a list of cards for a given app.
  # @param app_id The ID of the target app.
  # @param [Hash] opts the optional parameters
  # @return [CardListResponse]
  describe 'get_all test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_by_id
  # Get a card.
  # Returns the definition for a card with the given ID.
  # @param app_id The ID of the target app.
  # @param card_id The ID of the target card.
  # @param [Hash] opts the optional parameters
  # @return [CardResponse]
  describe 'get_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Update a card
  # Update a card definition with new details.
  # @param app_id The ID of the target app.
  # @param card_id The ID of the card to update.
  # @param [Hash] opts the optional parameters
  # @option opts [CardPatchRequest] :card_patch_request Card definition fields to be updated.
  # @return [CardResponse]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
