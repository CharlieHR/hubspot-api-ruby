=begin
#Timeline events

#This feature allows an app to create and configure custom events that can show up in the timelines of certain CRM objects like contacts, companies, tickets, or deals. You'll find multiple use cases for this API in the sections below.

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Hubspot::Crm::Timeline::TokensApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TokensApi' do
  before do
    # run before each test
    @api_instance = Hubspot::Crm::Timeline::TokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TokensApi' do
    it 'should create an instance of TokensApi' do
      expect(@api_instance).to be_instance_of(Hubspot::Crm::Timeline::TokensApi)
    end
  end

  # unit tests for archive
  # Removes a token from the event template
  # This will remove the token from an existing template. Existing events and CRM objects will still retain the token and its mapped object properties, but new ones will not.  The timeline will still display this property for older CRM objects if it&#39;s still referenced in the template &#x60;Markdown&#x60;. New events will not.  Any lists or reports referencing deleted tokens will no longer return new contacts, but old ones will still exist in the lists.
  # @param event_template_id The event template ID.
  # @param token_name The token name.
  # @param app_id The ID of the target app.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'archive test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create
  # Adds a token to an existing event template
  # Once you&#39;ve defined an event template, it&#39;s likely that you&#39;ll want to define tokens for it as well. You can do this on the event template itself or update individual tokens here.  Event type tokens allow you to attach custom data to events displayed in a timeline or used for list segmentation.  You can also use &#x60;objectPropertyName&#x60; to associate any CRM object properties. This will allow you to fully build out CRM objects.  Token names should be unique across the template.
  # @param event_template_id The event template ID.
  # @param app_id The ID of the target app.
  # @param timeline_event_template_token The new token definition.
  # @param [Hash] opts the optional parameters
  # @return [TimelineEventTemplateToken]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Updates an existing token on an event template
  # This will update the existing token on an event template. Name and type can&#39;t be changed on existing tokens.
  # @param event_template_id The event template ID.
  # @param token_name The token name.
  # @param app_id The ID of the target app.
  # @param timeline_event_template_token_update_request The updated token definition.
  # @param [Hash] opts the optional parameters
  # @return [TimelineEventTemplateToken]
  describe 'update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
