=begin
#CRM Owners

#HubSpot uses **owners** to assign CRM objects to specific people in your organization. The endpoints described here are used to get a list of the owners that are available for an account. To assign an owner to an object, set the hubspot_owner_id property using the appropriate CRM object update or create a request.  If teams are available for your HubSpot tier, these endpoints will also indicate which team an owner belongs to. Team membership can be one of PRIMARY (default), SECONDARY, or CHILD.

The version of the OpenAPI document: v3

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.2

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Hubspot::Client::Crm::Owners::Models::PublicTeam
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PublicTeam' do
  before do
    # run before each test
    @instance = Hubspot::Client::Crm::Owners::Models::PublicTeam.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PublicTeam' do
    it 'should create an instance of PublicTeam' do
      expect(@instance).to be_instance_of(Hubspot::Client::Crm::Owners::Models::PublicTeam)
    end
  end
  describe 'test attribute "id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "membership"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PRIMARY", "SECONDARY", "CHILD"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.membership = value }.not_to raise_error
      # end
    end
  end

end
